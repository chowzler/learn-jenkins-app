pipeline {
    agent any

    environment {
        NETLIFY_SITE_ID = '9a85c20c-c6a4-4a0a-b2b0-296b07bae593'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')
    }
    
    stages {
        stage('Build') {
            agent {
              docker {
                    image 'node:18-alpine'
                    reuseNode true
                }  
            }
            steps {
                sh '''
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
        
        stage('Run Tests') {
            parallel{
                stage('Test'){
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }  
                    }
                    steps{
                        echo "testing"
                        sh '''
                            #test -f build/index.html
                            npm test
                        '''
                    }
                    post {
                        always{
                            junit 'jest-results/junit.xml'
                        }
                    }
                }
            }
        }
        stage('Deploy Staging'){
            agent {
              docker {
                    image 'node:18-alpine'
                    reuseNode true
                }  
            }

            steps {
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    echo "Deploying to staging."
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --json >> deploy-output.json
                '''
            }
        
        }

        stage('Deploy Prod'){
            agent {
              docker {
                    image 'node:18-alpine'
                    reuseNode true
                }  
            }

            steps {
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    echo "Deploying to production. Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod
                '''
            }
        
        }
        stage('E2E'){
            agent {
                docker {
                    image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                    reuseNode true
                }  
            }

            environment {
                CI_ENVIRONMENT_URL = 'https://ephemeral-khapse-5527ca.netlify.app'
            }

            steps{
                echo "E2E"
                sh '''
                    npx playwright test --reporter=line
                '''
            }

            post {
                always{
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                }
            }

        }
    }
}
